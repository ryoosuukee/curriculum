■IT
・IT
IT(Information Technology)情報技術
コンピュータとネットワークを利用した技術の総称

・ICT
ICT(Information and Communication Technology)情報通信科学
ITをそのままICTに置き換えても問題は起きない
「コミュニケーション」という言葉が入っているため「個人からの情報発信」を強調するニュアンスがある
国際的には「ICT」が普及している

・IoT(Internet of things)モノのインターネット
モノがインターネット経由で通信すること


■OS
・OS(Operating System)
コンピュータのオペレーション(操作・運用・運転)を司るシステムソフトウェア

・Windows
マイクロソフトが開発・販売するオペレーティングシステム(OS)の製品群

・macOS(Mac OS X)
Appleが開発・販売する、Macintoshコンピュータ専用のオペレーティングシステム。

・UNIX
コンピュータ用のマルチタスク・マルチユーザーのオペレーティングシステムの一種
1969年にAT&Tのベル研究所にて開発を開始した。
代表的なOSの始祖であり、後発OSがUNIXで発明実証された設計を参考にしている。

・Linux
狭義にはLinuxカーネル、広義にはそれをカーネルとして用いたオペレーティングシステムを指す。
LinuxはUnix系オペレーティングシステムの１つとされる。


■言語・環境
・マークアップ/フロントエンド
・マークアップ
マークアップとは、
webサイトを作成するときに使用するhtmlという言語をサイト内の文書に意味づけをしていく作業のこと。

・フロントエンド
フロントエンドとバックエンドは、プロセスの最初と最後の工程を指す一般用語
フロントエンドは各種ユーザーから収集し、バックエンドが使える仕様に合うようにそれを加工する。
フロントエンドとバックエンドの結合部はインターフェースと呼ばれる。

  ◦HTML(Hyper Text Markup Language)
  ハイパーテキストを記述するためのマークアップ言語の1つ
  WWWにおいて、web pageを表現するために用いられる。

  ◦CSS(Cascading Style Sheets)段階スタイルシート
  HTML、XMLの表示をレイアウトなどの修飾を指定するための仕様

  ◦JavaScript
  プログラミング言語の1つ
  JavaScriptはプロトタイプベースのオブジェクト指向スクリプト言語であるが、
  クラスなどのクラスベースに見られる機能も取り込んでいる。

    ▪jQuery
    webブラウザ用のJavaScriptコードをより容易に記述できるようにするために設計されたJavaScriptライブラリ
    
  ◦Java SE(Java Platform, Standard Edition)
  Javaで使用されるAPIをまとめたもの
  APIとはApplication Programming Interfaceの略で、この場合はJavaの機能やデータなどを利用するための呼び出し方を定義したもの 	

・サーバーサイド
コンピュータネットワーク上のクライアント-サーバ関係において、サーバが行う操作

  ◦.NET(C#,VB)
  C#
  マイクロソフトのフレームワーク「.NET Framework」の一部である
  プログラミング言語の1つであり、子運分はその名前にもある通りC系言語(C言語、C++やJavaなど)の影響はあるが、
  構文以外の言語機能などについてはDelphiからの影響がある。

  VB(Visual Basic)
  マイクロソフトが1990年代に開発していたプログラミング言語およびその処理系
  Visual Studioに組み込まれ、さまざまな種類のアプリケーション開発に用いられる。

  ◦Java
  汎用プログラミング言語とソフトアッププラットフォームの双方を指している総称ブランド
  
    ▪Java EE(Java Platform, Enterprise Edition)(Jakarta EE)
    Javaで実装されたアプリケーションサーバの標準規格及びそのAPIを定めたもの
    Java SEの拡張機能で形で提供される
    2018年にoracleからEclipse Foundationに移管され、「Jakarta EE」に名称が変更になった

  ◦Perl
  プログラミング言語の1つ、実用性と多様性を重視しており、
  C言語やsed、awk、シェルスクリプトなど他のプログラミング言語の優れた機能を取り入れている
  web application、システム管理、テキスト処理などのプログラムを書くのに広く用いられている

  ◦PHP
  コミュニティベースで開発されているオープンソースの汎用プログラミング言語およびその公式の処理系である。
  特にサーバーサイドで動的なweb pageを作成するために機能を多く備えていることを特徴としている

  ◦Ruby
  まつもとゆきひろによって開発されたオブジェクト指向スクリプト言語（スクリプト言語とはプログラミング言語の一分類）


■サーバーソフト
・Apache
webサーバソフトウェア、Apache HTTP Serverの略称
Apache Licence2.0の条件でリリースされるフリーでオープンソースのクロスプラットフォームのWebサーバソフトウェア

・nginx
フリーかつオープンソースなWebサーバ
処理性能・高い平行性・メモリ使用量の小ささに焦点を当てて開発されている
HTTP、HTTPS、SMTP、POP3、IMAPのリバースプロキシの機能や、ロードバランサ、HTTPキャッシュ機能も持つ

・IIS(Microsoft Internet Information Services)
Microsoft Windowsの標準Webサーバー（アプリケーションサーバー）サービス
HTTP/HTTPS、FTP、SMTP、NNTP等の基本的なプロトコルはサポートしている。
クライアント版に付属するIISは機能制限が行われている。


■SQL
・SQL
関係データベース管理システム（RDBMS)において、データの操作や定義を行うためのデータベース言語（問い合わせ言語）、ドメイン固有言語
プログラミングにおいてデータベースへのアクセスのために、他のプログラミング言語と併用される

  ◦DB2
  IBMが開発・販売するデータベース管理システムの1つであり、および当製品を中心としたデータ管理ソフトウェアブランド名
  DB2は関係データベースだが、2001年以降はオブジェクトデータベース機能やXMLデータベース機能なども持つ。
  データベース言語であるSQLを初めて採用した関係データベース管理システムと言われている

  ◦MySQL
  オープンソースのリレーショナルデータベース管理システム(RDBMS)である。
  GNU General Public Licenceの条件に基づいたフリーでオープンソースのソフトウェアであり、
  さまざまなプロプライエタリライセンスでも利用可能

    ▪Maria DB
    MySQL派生として開発されている、オープンソースの関係データベース管理システム（RDBMS)

  ◦Oracle DB
  オラクルが開発・販売している、関係データベース管理システム（RDBMS)のことである
  oracle　DBは世界初の商用（RDBMS)であり、メインフレームからパーソナルコンピュータまで、幅広いプラットフォームをサポートしている

  ◦PostgreSQL
  拡張性とSQL準拠を強調するフリーでオープンソースの関係データベース管理システム（RDBMS)
  原始性、整合性、独立性、耐久性（ACID)プロパティを持つトランザクション、自動更新可能なビュー、
  マテリアライズドビュー、トリガ、外部キー、ストアドプロシージャを特徴としている
  単一マシンからデータウェアハウスや多数の同時使用ユーザを持つWebサービスまで、さまざまなワークロードを扱えるように設計されている
  macOS　Serverのデフォルトデータベースであり、Linux、FreeBSD、OpenBSD、Windowsでも利用可能

  ◦SQLite
  パブリックドメインの軽量な関係データベース管理システム（RDBMS)
  サーバとしてではなくアプリケーションに組み込んで利用されるデータベース
  一般的なRDBMSと違い、APIは単純にライブラリを呼び出すだけであり、データの保存に単一のファイルのみを使用することが特徴

  ◦SQL Server
  マイクロソフトが開発している、関係データベース管理システム（RDBMS)
  略称は「SQL Server」または「MySQL」と呼ばれている。主要な問い合わせ言語は（クエリ言語）は、T-SQLとANSI SQL
  企業向けの高機能なシステムから、組み込み系の小規模なシステムまで幅広く対応する。
  またMicrosoft Windowsと親和性が高く、ADOやADO.NETを経由して最適なバックエンドデータベースを構築できるようになっている。

・CRUD
ほとんどすべてのコンピュータソフトウェアが持つ永続性の4つ基本機能のイニシャルを並べた用語
その4つとは、Create（生成）、Read（読み取り)、Update（更新）、Delete（削除）である。
ユーザインタフェースが備えるべき機能（情報の参照/検索/更新）を指す用語としても使われる

・トランザクション
コンピュータ内で実行される、分けることのできない一連の情報処理の一単位を意味する
この一連の処理を分割して実行した場合、結果の整合性を保てなくなる

  ◦コミット
  データベース内で変更を永続的に確定すること
  バージョン管理システムのリポジトリ内で変更を反映すること

  ◦ロールバック
  データ更新などで障害が起こったときに、その前の状態にまで戻ることを言う、後進復帰ともいう

・排他制御（排他ロック）
コンピュータプログラムの実行において、複数のプロセスが利用できる共有資源に対し、複数のプロセスからの同時アクセスにより競合が発生する場合に、
あるプロセスに資源を独占的に利用させている間は、他のプロセスが利用できないようにする事で整合性を保つ処理のことを言う。
相互排除または相互排他(mutual Exclosion)ともいう。最大k個のプロセスが共有資源にアクセスしてよい場合をk-相互排除という。

  ◦楽観ロック
  楽観的並行性制御（optimistic concurrency control）とは、並行性制御(ロック）の手段の種別の一種であり、楽観的ロックの概念である。
  他の処理と競合してはならないトランザクションにおいて、開始時には特に排他処理などを行わず、完了する際に他からの更新がされたか否かを確認し、
  もし他から更新されてしまっていたら自らの更新処理を破棄し、エラーとする。対照的に悲観的並行性制御がある。

  ◦悲観ロック
  悲観的並行性制御（pessimistic concurrency control）とは、並行性制御の手段の種別の一種であり、悲観的ロックの概念である。
  他の処理と競合してはならないトランザクションにおいて、開始時に更新の抑止がされていないことを確認後
  （抑止されている場合は解除されるまで待機するか、エラーとして処理をあきらめる）他からの更新を抑止し（排他制御）、
  完了する際に抑止情報を解除する。対照的に楽観的並行制御がある。

・実行計画
ユーザが発行した問い合わせに基づきデータベース管理システム（DBMS)が内部的に生成する情報であり、
これによりDBMSの行うデータ処理がプログラム的に表される。
DBMSはクエリ実行計画の生成にあたりクエリ最適化の処理を行い、最も効果的に処理できると判断されたクエリ実行計画を問い合わせから導き出す。

・チューニング
情報システムやコンピュータ、ソフトウェアなどの設定や構成を調整し、目標の状態に近づけたり、性能を最大限引き出したりする作業を指すことが多い。
性能の計測や実行状態の監視、問題点やボトルネックの特定、問題を緩和・回避するための設定や構成の変更などの一連の作業からなる。
多くの場合、既存の状況から機材の変更・増強やソフトウェアの変更・改修などの根本的な部分の改変は行わず、
設定変更などを通じて使用状況に適した状態へ調整するというニュアンスで用いられる。

・パフォーマンス
コンピュータの性能を指すときは、主にレイテンシ及びスループットの総計を指す
コンピュータなどの機器やソフトウェア、システムなどの処理性能や実効速度、通信回線・ネットワークなどの伝送速度・容量などのことを指すことが多い

・スロークエリ
データベース管理システム（DBMS)に対する問い合わせ（クエリ）のうち、一定の基準に照らして遅い、時間がかかっているもの。
システム性能の制約となるボトルネックとなっている可能性が高い個所とみなされる。

・クエリログ
クライアントからのMySQL Serverへの接続・接続解除の情報、およびクライアントから実行された全てのSQLクエリを出力してくれるログ
SQL実行エラーが発生した際に、どのようなSQLが実行されたのかを正確に把握するのに役に立つ

・IDE(Intergrated Development Environment 統合開発環境)
ソフトウェアの統合的な開発環境であり、様々なツールの集合からなる。
従来は、ソフトウェアプログラムのコーディング・コンパイル・ビルド・デバッグといった作業を行う際に、
テキストエディタ、コンパイラ、リンカ、デバッガなどの各ツールをばらばらで利用していたものを、
ひとつの対話型操作環境（多くはGUI)から利用できるように統合したもの。最近のIDEには、
GUIアプリケーション開発のための迅速なプロトタイピング(Rapid Application Development:RAD)が可能なものが多い。
統合開発環境を使うことによって、巨大かつ複雑なソフトウェアでも、作成者に負担をかけることなく開発することが可能になる。

  ◦Eclipse
  コンピュータプログラミングにおいて使用される統合開発環境(IDE)である。
  ベースとなるワークスペースと、環境をカスタマイズするための拡張可能なプラグインシステムが含まれている。
  Eclipseは主にJavaで書かれており、主にJavaアプリケーションの開発に使用されるが、プラグインを介して
  他のプログラミング言語のアプリケーションを開発するために使用することもできる。
  また、LaTeX(EeXlipseプラグイン経由)やソフトウェアMathematicaのパッケージを使ったドキュメンの開発にも使用できる。

  ◦NetBeans
  オラクルを中心としたコミュニティにより開発されている。オープンソースの統合開発環境(IDE)である。
  NetBeans Platformを利用して開発されており、様々なモジュールを組み込むことが可能である。
  NetBeansの特徴の一つであるGUIエディタ(Project Matisse)もその一つである。

  ◦SpringToolSuite(STS)
  Spring frameworkの開発元が提供しているEclipseをベースとして作成された統合開発環境(IDE)で、
  Spring Frameworkを利用した開発に適した機能が備えられている。
  特定のプログラミングモデルを強制するものではないが、JavaコミュニティではEnterprise JavaBeans(EJB)
  モデルの代替・置換・追加として広く認知されつつある。設計上、このフレームワークはJava開発者の自由度を高くしているが、
  ドキュメントが豊富であり、よくある状況に使える使いやすいソリューションを提供する。

・DBツール
データベース管理タスクに使用できるツール、ユーティリティ及び補助ツールの総称。類似するタスクを実行できる
データベース・ツールもあるが、１つのデータベース・ツールですべてのデータベース管理タスクを実行することはできない

  ◦A5:SQL Mk-2
  データベース開発において生産性を向上させるべく開発されたSQL開発ツール
  SQLの実行・テーブルの編集・ストアドプロシージャの実行・ER図の作成…などを行うことができる。

  ◦pgAdmin
  PostgreSQLの管理ツールの1つで、ネットワークを通じて遠隔のデータベースサーバをグラフィカルな表示・操作体系(GUI)で
  管理することができるもの。オープンソースとして公開されている。

  ◦DBeaver
  Oracle SQL、SQL Server、PostgreSQL、MySQL、MariaDB、SQLiteなどほぼ全てのDBに対応したSQLクライアントツールである
  またGUI(Guraphical User Interface)クライアントならではの昨日が豊富に搭載されているため、学習用クライアントとしてだけではなく
  現場での実勢においても非常に有用なツールとなっている

  ◦MySQL Workbench
  MySQLの公式サイトにてMySQL Serverとともに配布されている、データベースの設計・開発・管理を一本で実現している無料ツールである。
  コマンドラインではなくビジュアル操作(GUI)に対応しており、コマンド操作が苦手なかたにもおすすめ

  ◦Sequel Pro
  MySQLのDBを確認できるMac用のGUIアプリケーションである。

  ◦TeamSQL
  DBを管理する為のソフトウェアのひとつ


■肩書
・PM
プロジェクトの計画・遂行に責任を負う管理者
定められた期限までにプロジェクトの目標を達成するため、与えられた予算や人材、設備、物資などを用いて実施計画を立て、
適宜修正しながら進捗の管理を行う。

・PL
プロジェクトを遂行するチームの責任者。
また、比較的大規模なプロジェクトにおいて、プロジェクトマネージャーを補佐し、現場の業務の実施・遂行に責任を持つ監督者

・PG（PE）
プログラミング言語やソフトウェア開発ツールなどを用いてコンピュータプログラムを作成・修正する技術者
プログラムの構想や設計、プログラミング言語によるコードの記述、コンパイルやリンクなど実行可能プログラムや配布パッケージの生成（ビルド）、
動作検証（テスト）、不良箇所の修正（デバッグ）など、ソフトウェアを完成させるまでの一連の工程の一部または全部に携わる人や職種を意味する

・SE
情報システムの企画、設計、開発、試験、構築、導入、運用、更新、修正、廃棄などに携わる技術者の総称。
狭義には、ソフトウェアの開発に携わる技術者のうち、プログラミング以外の業務を担当するもの

・デザイナー
クライアントや依頼者の求めに応じたデザインを考案する仕事

・エンジニア
  ◦フロントエンド・エンジニア
  情報システムやWebサイトを開発する技術者のうち、利用者への表示や操作の受付を行う部分を担当する職種のこと。
  特に、WebサイトやWebサービスの開発で、Webブラウザ側に展開されるコードの開発を行うエンジニア
  HTMLやCSS、JavaScript、画像ファイルなどを組み合わせてWebアプリケーションのクライアント側を開発するエンジニアのことで、従来はHTMLコーダー、
  マークアップエンジニア、JavaScriptプログラマなどと呼ばれていた職種を包含する

  ◦サーバーサイド・エンジニア
  サーバーで行うためのプログラム開発やデータ処理を担当している
  Webサイトを操作して送られてくるデータを保管場所に保存するために処理を呼び出したりする環境を作成し、
  メンテナンスを行ったりバージョンアップの際に対応したりする仕事

  ◦バックエンド・エンジニア
  プログラムの開発からWebサーバー、データベースといった環境整備まで幅広く担当するWeb系の技術者
  主に、ユーザーからは見えない裏側(バックエンド)のシステム部分を構築する。
  

■UI(ユーザインタフェース)
・UI
機器やソフトウェア、システムなどとその利用者の間で情報をやり取りする仕組み。システムから利用者への情報の提示・表示の仕方と、
利用者がシステムを操作したり情報を入力したりする手段の方式、機器、使い勝手などの総体を表す。

  ◦CUI(Character-based User Interface)
  コンピュータやソフトウェアの利用者に情報を提示したり操作を受け付けたりする方法(UI)の類型の一つで、
  すべてのやり取りを文字によって行う方式
  利用者はキーボードなどを用いて文字列によって指示を与え、コンピュータからはディスプレイ装置に文字を表示して応答を返したり情報を提示する。
  画面やウィンドウの上部から人間の入力文字列とコンピュータの出力文字列が交互に並ぶ対話式の操作環境が一般的である。

  ◦GUI(Graphical User Interface)
  コンピュータの表示・操作体系(UI)の分類の1つで、情報の提示に画像や図形を多用し、
  基礎的な操作の大半をマウスやタッチスクリーンなどによる画面上の位置の指示により行うことができるもの
  画面上にアイコンやメニュー、ボタンといった絵や図形に補助的な文字情報を組み合わせた操作要素が表示され、
  これをマウスやトラックパッド、タッチパネルなどのポインティングデバイス（位置入力装置）で選択してコンピュータへの指示を与える。


■ファイル/ディレクトリ
・ファイル
コンピュータにおけるデータ管理単位の1つで、ストレージ装置(外部記憶装置)などにデータを記録する際に利用者や
OSから見て最小の記録単位となるデータのまとまり利用者がコンピュータを用いて記憶媒体にデータを保存、読み込み、移動、
削除などする際に一つのまとまりとして取り扱うデータの集合を表し、OSの一部であるファイルシステム（file system）によって管理される。
ハードディスクやSSD、USBメモリ、光学ディスク（CD/DVD/Blu-ray Disc）などの記憶装置・媒体を利用する際に用いられるほか、
コンピュータと周辺機器の間やコンピュータ間の通信においてもデータの送受信単位として利用されることが多い。

・拡張子(extension)
コンピュータのストレージ(外部記憶装置)に記録されたファイル名のうち、「.」(ドット/ピリオド)で区切られた右側の部分。
「新しいテキストドキュメント.txt」というファイル名の拡張子は「.txt」である。
拡張子はファイルの種類や形式を表すために利用者やソフトウェアによって付与されるもので、
慣習的に1～4文字程度の半角英数字の組み合わせが用いられることが多い。現代のOSのほとんどでは文字数や文字種に制限はないが、
MS-DOSには半角3文字までの制約があったため、後継のWindowsでも習慣的にドットを除いて3文字の拡張子が多い。
UNIX系OSなどでは利用者やソフトウェアの便宜のために付けられるだけでシステム上の動作を指定するような特別な意味はないが、
WindowsやmacOS（Mac OS X）ではファイルを指定して開くよう指示すると拡張子を元に関連付けられたアプリケーションソフトを自動的に起動するといった機能に用いられる。
これらのOSでは特殊な用途のシステムファイルなどを除いて原則としてすべてのファイルに拡張子が付与され、
OSの設定として拡張子とソフトウェアの対応関係が管理されている。拡張子はファイル名本体と同じで利用者が自由に変更できるが、
みだりに変更すると正しいソフトウェアで開けなくなる場合がある。近年では拡張子をデスクトップ画面などで表示しない設定が既定となっていることが多いため、利用者が意識しないことも多い。

・ディレクトリ
コンピュータのファイルシステムにおいて、ファイルをグループ化するための特殊なファイルで整理・管理などの目的で使用される。
ディレクトリの中にも、通常のファイルでなく入れ子的にディレクトリを作って、任意の階層を持たせて管理できることがほとんどである。
ファイルの入れ物(容器)などとも表現され、GUIでは文具フォルダーのようなメタファーで表現されることが多い。ただし、
物理的な容器であるのはHDDなどのメディアそのものであるので、ディレクトリは「ファイルへの見出しの入れ物」と表現する方が正確である。

  ◦ルート・ディレクトリ
  ルートディレクトリとは、コンピュータがストレージ(外部記憶装置)の内容を整理するファイルシステムにおいて、
  装置やシステム全体の最上位のディレクトリのこと。すべてのファイルやディレクトリはルートディレクトリを根(root)
  とする木構造のディレクトリ階層のいずれかに収まっている。
  今日一般的なコンピュータのファイルシステムでは、ストレージの内部にファイルを格納するディレクトリ（directory）と呼ばれる領域を任意に作成することができる。
  ディレクトリの中にディレクトリを、さらにその中にディレクトリを作ることもでき、ディレクトリ構造全体は上位階層から下に向かって順に枝分かれしていく木構造（ツリー構造）となる。
  この中で、最上位のある唯一のディレクトリのことをルートディレクトリという。

  ◦カレント・ディレクトリ
  実行中のソフトウェアなどがストレージ(外部記憶装置)のファイルシステム中で現在位置として指し示しているディレクトリのこと。
  相対パスでファイルやディレクトリなどを指定する際の基準の位置となる。
  シェルやコマンドラインインタプリタなど主にOSへの操作を受け付けるソフトウェアが内部的に持つ状態の一つで、
  ストレージのファイルシステムを（UNIX系OSではストレージ以外のシステム上の資源も含む）階層構造で表したディレクトリツリーの中で、「今どこにいるのか」を表している。

・パス
コンピュータ内で特定の資源の所在を表す文字列のこと
ストレージ(外部記憶装置)内でファイルやディレクトリ(フォルダ)の位置を表すのに用いられるが、他の用途でも使われる。

  ◦絶対パス(absolute path)
  ファイルなどの所在を書き表すパス(path)の表記法の1つで、階層構造の頂点(最上位階層)からの位置関係を記述する方式

  ◦相対パス(relative path)
  ファイルなどの所在を書き表す(path)の表記方の1つで、現在位置からの相対的な位置関係を記述する方式
  起点となる位置から目的の位置までの道筋にある要素を順に並べて記述する
  区切り記号はWindowsの場合、日本では「￥」（円記号、実際には半角文字）、
  海外では「＼」（バックスラッシュ、同）を用い、UNIX系OSやWebサーバなどでは「/」（スラッシュ）を用いる。
  MS-DOSやWindowsではドライブ名（「C:￥」など）を頂点に、日本では「￥」（円記号、実際には半角文字）、
  海外では「＼」（バックスラッシュ、同）を区切り記号として記述する。
  Windowsネットワークのファイル共有ではコンピュータ名を頂点に「￥￥コンピュータ名￥共有名￥パス」といった形式で記述するUNC（Universal Naming Convention）を用いる。


■ネットワーク
・LAN(Local Area Network)ローカルエリアネットワーク/構内ネットワーク
限られた範囲内にあるコンピュータや通信機器、情報機器などをケーブルや無線電波などで接続し、
相互にデータ通信できるようにしたネットワークのこと。
概ね室内あるいは建物内程度の広さで構築されるものを指す。
銅線や光ファイバーなどを用いた通信ケーブルで機器間を接続するものを「有線LAN」（wired LAN）、
電波などを用いた無線通信で接続するものを「無線LAN」（wireless LAN）という。
有線LANの通信方式としてはいわゆる「Ethernet」（イーサネット/IEEE 802.3）系諸規格が、
無線LANの通信方式としてはいわゆる「Wi-Fi」（ワイファイ/IEEE 802.11）系諸規格がそれぞれ標準として普及しており、
単にLANといった場合はこれらの方式を用いたネットワークを指すことが多い。
他にも建物内に電気を供給するために張り巡らされた電力線を流用して通信する方式などがある。


・WAN(Wide Area Network)広域通信網
地理的に離れた地点間を結ぶ通信ネットワーク。建物内や敷地(キャンパス)内を結ぶLAN(LocalArea Network)と対比される用語で、
通信事業者が設置・運用する回線網を指すことが多い。

・クライアント
他のコンピュータやソフトウェアから機能や情報の提供を受けるコンピュータやソフトウェアのことをクライアントという。
提供する側のコンピュータやソフトウェア「サーバ」(server)と呼び、サーバとクライアントで構成されるシステムを
CSS（Client Server System クライアントサーバシステム)という。
クライアントはサーバの機能や情報の提供を受け、自らは利用者への情報の提示や入力・操作の受け付けなどを担当することが多い。
クライアントがサーバに処理要求（リクエスト）を送り、サーバがこれに応じて処理を行い、結果を返答（レスポンス）する、という形で一連の処理が進められる。

・サーバー
コンピュータネットワークにおいて、他のコンピュータに対し、自身の持っている機能やサービス、データなどを提供するコンピュータのこと。
また、そのような機能を持ったソフトウェア。
コンピュータ（ハードウェア）のことを明示的に指し示す場合は「サーバコンピュータ」「サーバマシン」「サーバ機」などと呼ばれ、
ソフトウェアのことを指す場合は「サーバソフト」「サーバソフトウェア」「サーバプログラム」などと呼ばれる。


■各種プロトコル
・HTTP(Hyper Text Transfer Protocol)
WebサーバとWebクライアントの間でデータの送受信を行うために用いられるプロトコル(通信規格)。
Webページの構成するHTMLファイルや、ページに関連付けられたスタイルシート、スクリプト、画像、音声、動画などのファイルを、
データ形式などのメタ情報を含めてやり取りすることができる。
HTTPはクライアントから要求（HTTPリクエスト）を送り、サーバが応答（HTTPレスポンス）を返すプル型（リクエスト/レスポンス型）の通信を基本としており、
WebブラウザやWebクローラなどのクライアントから送信する要求の形式や、Webサーバからの応答の形式などを定めている。
HTTPリクエストおよびレスポンスは要求や返答の内容、資源の種類や形式などの情報、および関連する情報を記述したヘッダ部と、
送受信する資源（ファイルなど）の本体であるボディ部で構成される。
ボディ部は基本的にはレスポンスに存在するが、クライアント側からデータを送信する際にはリクエストにも付加される。

・FTP(File Transfer Protocol)ファイル転送プロトコル
インターネットなどのTCP/IPネットワークでファイル転送を行うことができるプロトコル(通信規格)の1つ。
FTPサーバ、FTPクライアントの二種類のソフトウェアを用い、両者の間で接続を確立し、クライアントからの要求に基づいてファイルを送受信することができる。
サーバ側ではアカウント名とパスワードによる利用者の認証を行い、それぞれの利用者に許可された権限や領域（ディレクトリ）で送受信が行われる。

・HTTPS(HTTP over SSL/TLS  ;Heper Text Transfer Protocol Secure/HTTP Secure)
通信方式の種別などを表すURIスキームの1つで、Webのデータ転送に用いられるHTTPが、SSLやTLSで暗号化されている状態を表したもの。
WebサーバとWebブラウザの間の通信が暗号化されていることを意味し、通信経路上での盗聴や改竄、第三者によるなりすましを防止する。
インターネット上での情報資源を指し示すのに「http://www.example.com/」といった形式の「URL」（Uniform Resource Locator）あるいは「URI」と呼ばれる書式が用いられる。
先頭部分の「http://」は資源の種類や通信方式、プロトコル（通信手順）などを表すスキームと呼ばれる要素で、
通常のWeb通信ではHTTPによる通信を表す「http://」を用いる。

・SSL(Secure Sockets Layer) SSL/TLS
インターネットなどのIPネットワークでデータを暗号化して送受信するプロトコル(通信手順)の1つ。
データを送受信する一対の機器間で通信を暗号化し、中継装置などネットワーク上の他の機器によるなりすましやデータの盗み見、
改竄を防ぐことができる。
SSLは公開鍵暗号を応用したデジタル証明書による通信相手の認証（一般的にはサーバの認証）と、共通鍵暗号（秘密鍵暗号）による通信の暗号化、
ハッシュ関数による改竄検知などの機能を提供する。Webアクセスに使われるHTTPと組み合わせ、Webサイトで認証情報や個人情報、
決済情報などの送受信を安全に行う手段として広く普及している。

・SSH(Secure SHell)セキュアシェル
主にUNIXコンピュータで利用される、ネットワークを介して別のコンピュータにログインして操作するためのソフトウェアの1つ。
通信経路が暗号化されるため、インターネットなどを経由しても安全にアクセスすることができる。
コンピュータ上で動作しているOSに利用者が指示を与えるためのシェル（shell）と呼ばれるプログラムの一種で、遠隔からコンピュータの操作画面を呼び出し、
手元のコンピュータのキーボードなどで入力したコマンド（命令）などを送信して実行し、結果を受信して表示することができる。
公開鍵暗号と秘密鍵暗号を組み合わせて通信経路を暗号化し、パスワードなどの認証情報や入力されるコマンド、出力された処理結果などをすべて暗号化して送受信する。

・ポート(port)、ポート番号
機器やソフトウェアが外部の別の主体と接続・通信するための末端部分のことを比喩的にこのように呼ぶ。
最も一般的な用法として、機器の筐体などに設けられたケーブルやコネクタの差込口のことをポートという。
コンピュータ本体には周辺機器やネットワークと接続するためのポートが設けられており、
接続方式の名称を冠してUSBポートやLANポート（Ethernetポート）などのように呼ぶ。
物理的な端子そのものだけでなく、ソフトウェアが端子を通じて外部とデータを入出力するできるよう、
オペレーティングシステム（OS）などによって抽象化されたインターフェース（WindowsのCOMポートなど）のことを指す場合もある。

・HTTP、FTP、SSHの各ポート番号
HTTP TCP/80
FTP TCP/20～21
SSH TCP/22

・ファイアウォール(FW)
ネットワークの境界に設置され、内外の通信を中継・監視し、外部の攻撃から内部を保護するためのソフトウェアや機器、
システムなどのこと。原義は「防火壁」で、外部からの攻撃に対する防御を、火事の炎を遮断して延焼を防ぐことになぞらえている。
一般的な構成では、ファイアウォールに内部ネットワークの回線と外部ネットワークの回線を両方つなぎ、
内部と外部の通信が必ずファイアウォールを通過するようにして、ファイアウォールが一定の基準に従って不正と判断した通信を遮断する。
サーバコンピュータ上でソフトウェアとして動作するものと、専用の通信機器として提供されるものがあり、
コストや導入の容易さを重視する場合は前者を、規模や性能が必要な場合は後者を用いることが多い。

・TCP(Transmission Control Protocol)
インターネットなどのネットワークで、IP(Intenet Protocol)の一段階上位層のプロトコル(通信規約)として標準的に使われるものの1つ。
IPと、HTTPなど各用途固有の上位プロトコルとの橋渡しをするもので、ポート番号という識別番号を用いて、
各IPデータグラムが運んでいるデータがどの上位プロトコルのものであるかを識別し、担当のソフトウェアに振り分けたりすることができる。
TCPはコネクション型のプロトコルで、通信相手の状況を確認して接続を確立し、
データの伝送が終わると切断するという手順を踏む。相手が確実にデータを受け取ったかを確認したり、
データの欠落や破損を検知して再送したり、届いたデータを送信順に並べ直したりといった制御を行う。
信頼性は高いが転送効率は低く、通信経路の品質が低いとデータの到着に遅延が生じたり通信不能になりやすい。
転送効率より確実性が重視される用途でよく利用される。
同じ階層で利用されるプロトコルにUDP（User Datagram Protocol）があり、再送制御などを行わず「送りっぱなし」にする仕組みのため、
確実性より転送効率や即時性を重視する用途にはUDPを用いる。


■IPアドレス
・IPアドレス(Internet Protocol Address)
インターネットなどのTCP/IPネットワークに接続されたコンピュータや通信機器の一台ごとに割り当てられた識別番号。
現在主流のIPv4では32ビットの値となっており、1つのネットワークに最大42億台が参加できる。
インターネットなどのネットワークでは機器間の通信をIP（Internet Protocol）と呼ばれる共通のプロトコル（通信規約）によって行う。
IPアドレスはこのIPネットワークにおける個々の機器を識別するための番号で、データの宛先の指定や送信元の特定などに用いられる。
現在インターネットなどで広く普及しているIPはIPv4（IPバージョン4）で、アドレスを32ビットの値として表す。
書き表す場合には先頭から順に8ビットごとに区切り、それぞれを十進数の値として「.」（ピリオド/ドット）で区切って表記する。
例えば、「11000110 00110011 01100100 00000001」というアドレスは「198.51.100.1」のように表記する。

  ◦グローバルIPアドレス
 インターネット全体で一意に特定できなければならず、複数の組織や端末で重複があってならないため、勝手に設定して名乗ることができず、
アドレス発行組織に申請を行って割り当てを受けなければならない。
インターネットへの接続を希望する各組織・個人からの申請を受けてアドレスを割り当てるのはNIRの担当となる。
日本を管轄するRIRはAPNIC（Asia Pacific Network Information Centre）、NIRはJPNIC（Japan Network Information Center）である。 

  ◦プライベートIPアドレス
各組織ごとに設置・運用されているLAN(構内ネットワーク)などのネットワーク上で用いられるアドレスで、
申請などは不要で自由に機器を設定して使用してよい。ただし、各アドレスがそのネットワークの内部で重複してはならない点は
グローバルアドレスと変わらない。
プライベートアドレスしか持たない機器はインターネットに直接接続して通信することはできないため、
ネットワーク境界にゲートウェイやルータ、プロキシサーバなどを設置してアドレス変換やデータの中継などを行い、
一定の制約（インターネット側から接続を開始できないなど）の元で通信できるようにすることが多い。


■ドメイン
・ドメイン
インターネットなどのTCP/IPネットワーク上で機器やネットワークを識別するドメイン名(domain name)を指すことが多い。
インターネット上の資源の所在や所属を表す住所のようなもので、複数の個人や組織で同じ登録名が重複しないよう、全世界で一元的に発行・管理されている。
登録される識別名はアルファベットと数字、ハイフン「-」の組み合わせで構成される。
近年では、日本語など各国独自の言語・文字でドメインを登録できる国際化ドメイン名（IDN：Internationalized Domain Name）も利用できるようになった。

・DNS(Domain Name System)
インターネットなどのIPネットワーク上でドメイン名(ホスト名)とIPアドレスの対応関係を管理するシステム。
利用者が単なる番号列であるIPアドレスではなく、日常使っている言語の文字を組み合わせた認識しやすいドメイン名で
ネットワーク上の資源にアクセスできるようにする。
IPネットワークではIPアドレスと呼ばれる数値列で個々のコンピュータやネットワークを識別するが、
DNSを使えば人間にとって親しみやすい文字や記号の並びで「ドメイン名」（domain name）と呼ばれる別名をつけることができる。
ドメイン名が単一の機器を指し示す場合は「ホスト名」（host name）とも呼ばれる。
各ドメイン名について、ホスト名とIPアドレスの対応関係や管理情報などを記録し、
一定の通信手順に基づいてどこからでも容易に参照できるようにした世界規模の世界規模の分散型データベースがDNSである。

・VPN(Virtual Private Network)仮想プライベートネットワーク
通信業者の公衆回線を経由して構築された仮想的な組織内ネットワーク。また、そのようなネットワークを構築できる通信サービス。
企業内ネットワークの拠点間接続などに使われ、あたかも自社ネットワーク内部の通信のように遠隔地の拠点との通信が行える。
データ通信の拠点間接続サービスのことを指し、企業内LANを通信キャリアの持つバックボーンネットワークを通じて相互に接続するサービスをいう。
かつては各拠点の間に専用線を導入して直接通信していたが、キャリアのバックボーンに「相乗り」することにより低コストで拠点間接続が可能となる。
バックボーンでは様々な企業のデータが混在して流れることになるが、データは認証や暗号化で厳重に保護・管理されるため、混信や漏洩、盗聴などの危険性は低い。
最近ではバックボーンにインターネットを利用する「インターネットVPN」も登場しており、
通常のVPNサービスよりもさらに低コストでの利用が可能だが、インターネットの特性上、
セキュリティや通信品質の確保はキャリアの通信網を利用するよりも難しくなる。

・ブリッジ
ネットワークの分野で、複数のネットワークセグメントを結ぶ中継機器のうち、受信したデータのMACアドレスなどデータリンク層(リンク層、第2層、MAC層)の宛先情報を参照して
中継の可否を判断する機能を持ったネットワークブリッジあるいは単にブリッジという。
ブリッジは接続されたセグメントから流れてきたデータの宛先情報を解析し、
もう一方のセグメントに関係する（宛先がそのセグメントに存在する、ブロードキャストフレームであるなど）ものであれば中継し、
そうでないものは破棄する。無駄な信号が流れるのを防いで性能を向上させることができる。
すべての信号をすべてのセグメントに中継する、物理的に信号を再送信するだけの物理層（第1層）の中継機器を「リピータ」（repeater）、
ネットワーク層（インターネット層、第3層）の宛先情報などに基いて経路制御などを行なう機器を「ルータ」（router）という。

・プロキシサーバー
プロキシ(Proxy)は英語で「代理」の意味。インターネットに直接接続できないコンピュータの代わりに、インターネットに接続し、
Webサイトへのアクセスなどを行うサーバのこと。
ネットワーク内におけるインターネットの出入り口をプロキシサーバー経由に限定することで、外部からの不正アクセスを防止したり、
業務と関係のないWebサイトへのアクセスを禁止したりすることができる。また、データを蓄えるキャッシュ機能があるため、
別のコンピューターから同じ要求が来ても、素早くデータを返すことが可能。つまり、社員全員が特定サイトを閲覧するような場合でも、
誰かが一度アクセスするだけで済むため、時間の短縮化が図れる。
現在では、アクセス元のコンピューターの身元を隠すためにプロキシサーバーを使うケースもある。
プロキシサーバーを介してアクセスすると、接続先のサーバーに残るのはプロキシサーバーのIPアドレスだけなので、
個人のIPアドレスは知られずに済む。とはいえ、プロキシサーバーにはアクセス履歴が残るため、匿名性が完全に保たれるわけではない。
普段は意識することのないプロキシサーバーではあるが、機密情報や個人情報の漏えいが許されない企業では、その存在価値は大きいといえる。


■電子メール
・SMTP(Simple Mail Transfer Protocol)
インターネットなどのTCP/IPネットワークで標準的に用いられる、電子メール(eメール)を伝送するための通信規約(プロトコル)の1つ。
SMTPでメールを転送するソフトウェアをMTA（Mail Transfer Agent）あるいはSMTPサーバ（SMTP server）という。
一方、受信側でクライアントへメールを配送するソフトウェアはMRA（Mail Retrieval Agent）と呼ばれ、
受信プロトコルの違いによりPOP3サーバ、IMAP4サーバなどに分かれる。
SMTPは1980年代から使われている古いプロトコルで、最初の仕様はIETFによって1982年にRFC 821として規格化された。
幾度かの改訂を経て2008年に最新版のRFC 5321が発行されている。

・POP(Post Office Protocol)
インターネットなどのTCP/IPネットワークで標準的に用いられる、電子メール(eメール)を受信するための通信規約(プロトコル)の1つ。
POPを利用する場合は原則として届いたメールはすべてクライアント（メールソフト）側にダウンロードしてサーバからは削除し、
メールソフト上で未既読の管理やフォルダなどによる分類を行う。この方式はネットに接続されていなくてもすべての受信メールを見ることができ、
サーバのメール保管容量も少なくて済むが、複数の端末で同じメールアドレスを利用したい場合には向いていない。
そのような場合はサーバ上で既読管理や分類などを行うことができるIMAP4を使ったり、Webメールシステムを使うことが多い。

・IMAP(Internet Message Access Protocol)
インターネットなどのIPネットワークで標準的に用いられる、電子メール（eメール）を受信するための通信規約（プロトコル）の一つ。
利用者が自分宛ての電子メールを保管しているメール受信サーバにアクセスし、
新着を確認したり一覧から必要なものを選んで手元に受信する手順を定めている。


■セッションとクッキー
・セッション(session)
コンピュータシステムやネットワーク通信において、接続/ログインしてから、切断/ログオフするまでの、
一連の操作や通信のことをこのように呼ぶ

・クッキー(Cookie  HTTP Cookie)
Webサイトの提供者が、Webブラウザを通じて訪問者のコンピュータに一時的にデータを書き込んで保存させる仕組み。
CookieにはWebサイト（Webサーバ）側が指定したデータを保存しておくことができ、利用者の識別や属性に関する情報や、
最後にサイトを訪れた日時などを記録しておくことが多い。ネットサービスなどのサイトで利用者のIDなどが保存されると、
次にアクセスしたときに自動的に利用者の識別が行われ、前回の続きのようにサービスを受けることができる。
1つのCookieには4096バイトのデータを記録でき、1台のサーバが同じコンピュータに対して発行できるCookieの数は20個に制限されている。
Cookieの総数は300個までで、これを超えると古い方から削除される。また、個々のCookieには有効期限が設定されており、
期限を過ぎたものは破棄される。

・キャッシュ(cache  キャッシュデータcache data  キャッシングcaching)
低速な記憶装置や伝送路から読みだしたデータのうち、直近に読み込んだものや使用頻度が高いものを高速な記憶装置に複製しておくこと。
また、その際に使われる高速な記憶装置や、複製されたデータそのもののこと。データの読み込みを高速化したり、
伝送量を削減することができる。
例えば、コンピュータのメインメモリはストレージ装置に比べれば何桁も高速にデータの読み書きが行えるため、
使用頻度の高いデータをメモリ内に保持しておくことにより、すべてのデータをストレージに置いた場合よりも処理を高速化することができる。
この場合、メモリ（に複製されたデータ）がストレージのキャッシュである。


■ DB（データベース）について
・インデックス
書籍の巻末の索引のように多数のものの中から特定の対象を素早く見つけ出すため識別情報や、整列された所在情報の一覧などを指すことが多い。
プログラミングなどの分野では、同種の複数のものが並んでいるときに、
個々の要素を区別するために付けられた通し番号などの識別情報をインデックスという。配列の要素を指し示す添字などが該当する。
データベースやファイルシステム、検索エンジンなどでは、収集・格納された大量のデータをすばやく検索・抽出するために作成された索引データを
インデックスという。データ本体を端から順に探すよりも圧倒的に短い手順で目的のデータを探し出せる。
具体的には、見出しとなる識別符号と、データ本体のある所在情報などを対応付け、
整列・分類などを行ったあと木構造やハッシュテーブルなど検索に適したデータ構造に格納したものを指すことが多い。


■テストについて
・フロー
ソフトウェアやプログラミングの分野では、コンピュータプログラムを構成する命令や手続き、処理の流れなどのことをフローという。
矩形や矢印などを組み合わせてこれを図示したものをフローチャートという。
通信の分野では回線を通じて伝送される信号やデータの流れを「データフロー」（data flow）あるいは単にフローという。
情報システム上での機器間やソフトウェア間のデータの移動や伝達のこともデータフローということがある。
企業の情報システムなどで、システム化の対象となる事業や業務における手順や手続きの流れのことを「ワークフロー」（workflow）
あるいは単にフローという。

■チケット管理ツール
・タスク
ソフトウェアの実行単位のことをタスクということがある。

■バージョン管理
・Git
オープンソースの分散バージョン管理システムの1つ。
複数の開発者が共同で1つのソフトウェアを開発する際などに、ソースコードやドキュメントなどの編集履歴を統一的に管理するのに用いられる。
バージョン管理システムの基本的な機能として、プロジェクトを構成するファイルやディレクトリにいつ誰がどのような変更を行ったかを記録しており、
必要に応じて特定の日時の版を参照したり、その状態に戻したりすることができる。
また、プロジェクトの時系列を分岐（ブランチ）して派生プロジェクトを作成したり、それを再び元の系列に融合（マージ）したりすることができる。
Gitは分散バージョン管理システムに分類され、管理するデータの集合体であるリポジトリ（repository）を、
各利用者の手元のコンピュータに丸ごと複製し、必要に応じて中央の管理サーバと同期する方式を取っている。

・SVN(Subversion)
著名なオープンソースのバージョン管理システムの一つ。複数の開発者が共同で一つのソフトウェアを開発する際などに、
ソースコードやドキュメントを管理するのに用いられる。CVS（Concurrent Versions System）を参考に開発され、
基本的なコマンドなどはCVSと共通になっている。

・デグレ(degrade デグレード)/リグレッション(regression)先祖返り
新しいバージョンのソフトウェアの品質が、以前より悪くなること。また、以前修正した不具合やバグが再発・復活すること。
新しいファイルなどを古い内容で上書きしてしましい、更新内容が失われることを指す場合もある。
ソフトウェアが更新・修正される場合、利用者は機能・性能の向上、バグや不具合の減少を期待するが、
性能が悪化したり、これまで使えた機能が使えなくなったり、バグや不具合が増えるなど、かえって品質が下がってしまうことがある。
この現象をデグレードという。
主な原因としては、新たに開発した部分のテストやデバッグが不十分だったり、
ソースコードのバージョン管理に失敗してバグの残っている古いコードを使ってしまったり、
ある部分に施した修正が別の部分に及ぼす影響の評価が不十分であることなどが挙げられる。
デグレードを防ぐため、機能追加やバグ修正などでコードの一部が改修されたあと、
それまでの動作に変更や問題が起きないことを確認するために実施されるテストを「デグレードテスト」「リグレッションテスト」
「回帰テスト」「退行テスト」などという。

・マージツール
分岐したブランチを再び元の流れに統合（マージ）できるシステムもある。
