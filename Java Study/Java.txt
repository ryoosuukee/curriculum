■開発
◦ウォーターフォール開発
開発現場でよく用いられる手法で、開発手順を１つずつ確認しながら工程を進めていく手法のこと
開発を各工程に分けて進めるが、次のフェーズに進んむと後戻りができない手法
開発担当者や責任者、クライアントが各工程の成果物を共に確認し、
双方の合意を得てうえで各工程を完了とみなす。ウォーターフォール型開発の特徴は、
ひとつひとつの工程に抜け漏れがないかどうか厳重に管理しながら進めていくこと。
クライアントに丁寧なヒアリング調査を行い、要件定義が完了次第作られる基本設計を土台にして
詳細設計のフェーズへと進んでいくため、前の工程に欠陥があっては次へと進めない

◦アジャイル開発
クライアントの要望に応えるシステムをできる限り早くリリースしよという考えに基づいている開発手法
クライアントのビジネスの指導を早めようという目的がある。
リリースを早くするには、搭載する機能を最低限の状態にする方法がとられるケースが多い。
アジャイル型開発では、開発メンバーがシステムにおける優先度に順位をつけ、短い期間での納品を
目指して動く。
システムの優先順位を決めるためにミーティングを毎日行い、チーム内でスムーズに連携をとる
「スクラム」という手法が主に取られる

◦マイグレーション
既存のコンピューティングシステムを構成する機器やオペレーティングシステム（OS）、
アプリケーションソフトなど（のいすれかあるいはすべて）を、新しく用意した別の製品に入れ替えることを
マイグレーションという

◦デグレーション（degrade)デグレ/リグレッション/regression/先祖返り/リグレ
新しいバージョンのソフトウェアの品質が、以前より悪くなること。また、以前修正した不具合やバグが
再発・復活すること。新しいファイルなどを古い内容で上書きしてしまし、更新内容が失われることを指す
場合もある。


◦デプロイ（deploy）デプロイメント/deployment
配備する、配置する、展開する、配置につくなど意味
開発したソフトウェアを実際の運用環境に配置・展開して実用に供することを指す場合が多い
ソフトウェアを構成するプログラムなどをパッケージなっどにまとめ、使用環境に導入可能な状態に
組み立てる工程（ビルドおよびリリース）、実査の使用環境に展開して導入する工程（インストール）、
プログラムを起動して所定の設定や手続きを行い操作や要求を受け付けられる状態にする工程（アクティベート）
などを含む。

◦コンフリクト(conflict)
競合、衝突、対立、葛藤、緊張、紛争などの意味を持つ
IT分野では、複数の装置やプログラムなどが同じ資源を同時に利用しようとして競合状態になってしますことを
意味する場合が多い。競合、衝突の訳語があてられることが多い。
コンピュータシステムの中で共存する複数のソフトウェアやハードウェアが、
同じ資源（メモリ領域やI/Oポートなど）を同時に利用しようとして奪い合いになったり、
動作が不安定になったりすることをコンフリクトという。


〇環境
◦開発環境（ローカル）



検証環境（ステージング）
本番環境
設計書／仕様書
要件定義
基本設計書
詳細設計書
テスト
単体テスト（UT）
結合テスト（CT／IT）
総合テスト（ST）
エビデンス／証跡
データパッチ
Access
マクロ
VBA
GAS（Google Apps Script）
API
WEB API
REST API
SOAP
Ajax
XML
JSON
ステータスコード
クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
バリデーション
データ連携
Daemon
CRON
バッチ
ログ
CSV
TSV
プルリクエスト（マージリクエスト）
■ チケット管理ツール
